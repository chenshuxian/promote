"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/user";
exports.ids = ["pages/api/user"];
exports.modules = {

/***/ "./pages/api/user.js":
/*!***************************!*\
  !*** ./pages/api/user.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n\nconst prisma = new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient();\nasync function handler(req, res) {\n  const q = req.body.q;\n  const api = req.body.api;\n  let status;\n\n  if (req.method === \"POST\") {\n    // 查詢狀態\n    if (api === \"checkStatus\") {\n      status = 99;\n\n      try {\n        const user = await prisma.apply.findUnique({\n          where: {\n            id: q\n          },\n          select: {\n            status: true\n          }\n        });\n\n        if (user) {\n          status = user.status;\n        }\n\n        return res.status(200).send({\n          title: \"處理進度\",\n          status\n        });\n      } catch (err) {\n        console.log(err);\n\n        if (err.code === \"P2002\") {\n          return res.status(400).json({\n            title: \"申請失敗\",\n            msg: \"此身份證已經被申請，請確認輸入是否有誤\"\n          });\n        }\n\n        return res.status(400).send(\"建檔失敗\");\n      }\n    } // 確認用戶名與銀行戶是否相同\n\n\n    if (api === \"checkName\") {\n      // console.log(\"checkName\");\n      let msg = \"銀行戶名必預與申請人相同\";\n      let is_same = 0;\n      let same;\n\n      try {\n        const user = await prisma.apply.findMany({\n          where: {\n            AND: [{\n              name: {\n                equals: q.name\n              }\n            }, {\n              id: {\n                equals: q.id\n              }\n            }]\n          },\n          select: {\n            name: true\n          }\n        });\n        same = Object.keys(user).length; // 戶名和申請人相同\n\n        if (same) {\n          msg = \"申請者與銀行戶名相同\";\n          is_same = 1; // console.log(\"update\" + update);\n\n          msg = \"申請人與銀行戶同相同\";\n        } else {\n          is_same = 0;\n        }\n\n        const update = await prisma.apply.update({\n          where: {\n            id: q.id\n          },\n          data: {\n            is_same_name: is_same\n          }\n        });\n        return res.status(200).send({\n          is_same,\n          msg\n        });\n      } catch (err) {\n        console.log(err);\n\n        if (err.code === \"P2002\") {\n          return res.status(400).json({\n            title: \"申請失敗\",\n            msg: \"此身份證已經被申請，請確認輸入是否有誤\"\n          });\n        }\n\n        return res.status(400).send(\"建檔失敗\");\n      }\n    }\n  } else {\n    res.status(200).json({\n      name: \"John Doe GET\"\n    });\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Q0Q7O0FBRUQsY0FBTVMsTUFBTSxHQUFHLE1BQU1oQyxNQUFNLENBQUNVLEtBQVAsQ0FBYXNCLE1BQWIsQ0FBb0I7QUFDdkNwQixVQUFBQSxLQUFLLEVBQUU7QUFDTEMsWUFBQUEsRUFBRSxFQUFFVCxDQUFDLENBQUNTO0FBREQsV0FEZ0M7QUFJdkNvQixVQUFBQSxJQUFJLEVBQUU7QUFDSkMsWUFBQUEsWUFBWSxFQUFFWDtBQURWO0FBSmlDLFNBQXBCLENBQXJCO0FBU0EsZUFBT3BCLEdBQUcsQ0FBQ0ksTUFBSixDQUFXLEdBQVgsRUFBZ0JRLElBQWhCLENBQXFCO0FBQzFCUSxVQUFBQSxPQUQwQjtBQUUxQkQsVUFBQUE7QUFGMEIsU0FBckIsQ0FBUDtBQUlELE9BN0NELENBNkNFLE9BQU9MLEdBQVAsRUFBWTtBQUNaQyxRQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUYsR0FBWjs7QUFDQSxZQUFJQSxHQUFHLENBQUNHLElBQUosS0FBYSxPQUFqQixFQUEwQjtBQUN4QixpQkFBT2pCLEdBQUcsQ0FBQ0ksTUFBSixDQUFXLEdBQVgsRUFBZ0JjLElBQWhCLENBQXFCO0FBQzFCTCxZQUFBQSxLQUFLLEVBQUUsTUFEbUI7QUFFMUJNLFlBQUFBLEdBQUcsRUFBRTtBQUZxQixXQUFyQixDQUFQO0FBSUQ7O0FBQ0QsZUFBT25CLEdBQUcsQ0FBQ0ksTUFBSixDQUFXLEdBQVgsRUFBZ0JRLElBQWhCLENBQXFCLE1BQXJCLENBQVA7QUFDRDtBQUNGO0FBQ0YsR0FoR0QsTUFnR087QUFDTFosSUFBQUEsR0FBRyxDQUFDSSxNQUFKLENBQVcsR0FBWCxFQUFnQmMsSUFBaEIsQ0FBcUI7QUFBRU0sTUFBQUEsSUFBSSxFQUFFO0FBQVIsS0FBckI7QUFDRDtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHJvbW90ZS8uL3BhZ2VzL2FwaS91c2VyLmpzPzJhYmIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUHJpc21hQ2xpZW50IH0gZnJvbSBcIkBwcmlzbWEvY2xpZW50XCI7XG5jb25zdCBwcmlzbWEgPSBuZXcgUHJpc21hQ2xpZW50KCk7XG5cbmV4cG9ydCBkZWZhdWx0IGFzeW5jIGZ1bmN0aW9uIGhhbmRsZXIocmVxLCByZXMpIHtcbiAgY29uc3QgcSA9IHJlcS5ib2R5LnE7XG4gIGNvbnN0IGFwaSA9IHJlcS5ib2R5LmFwaTtcbiAgbGV0IHN0YXR1cztcblxuICBpZiAocmVxLm1ldGhvZCA9PT0gXCJQT1NUXCIpIHtcbiAgICAvLyDmn6XoqaLni4DmhYtcbiAgICBpZiAoYXBpID09PSBcImNoZWNrU3RhdHVzXCIpIHtcbiAgICAgIHN0YXR1cyA9IDk5O1xuICAgICAgdHJ5IHtcbiAgICAgICAgY29uc3QgdXNlciA9IGF3YWl0IHByaXNtYS5hcHBseS5maW5kVW5pcXVlKHtcbiAgICAgICAgICB3aGVyZToge1xuICAgICAgICAgICAgaWQ6IHEsXG4gICAgICAgICAgfSxcbiAgICAgICAgICBzZWxlY3Q6IHtcbiAgICAgICAgICAgIHN0YXR1czogdHJ1ZSxcbiAgICAgICAgICB9LFxuICAgICAgICB9KTtcblxuICAgICAgICBpZiAodXNlcikge1xuICAgICAgICAgIHN0YXR1cyA9IHVzZXIuc3RhdHVzO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5zZW5kKHtcbiAgICAgICAgICB0aXRsZTogXCLomZXnkIbpgLLluqZcIixcbiAgICAgICAgICBzdGF0dXMsXG4gICAgICAgIH0pO1xuICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICAgIGlmIChlcnIuY29kZSA9PT0gXCJQMjAwMlwiKSB7XG4gICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHtcbiAgICAgICAgICAgIHRpdGxlOiBcIueUs+iri+WkseaVl1wiLFxuICAgICAgICAgICAgbXNnOiBcIuatpOi6q+S7veitieW3sue2k+iiq+eUs+iri++8jOiri+eiuuiqjei8uOWFpeaYr+WQpuacieiqpFwiLFxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuc2VuZChcIuW7uuaqlOWkseaVl1wiKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyDnorroqo3nlKjmiLblkI3oiIfpioDooYzmiLbmmK/lkKbnm7jlkIxcbiAgICBpZiAoYXBpID09PSBcImNoZWNrTmFtZVwiKSB7XG4gICAgICAvLyBjb25zb2xlLmxvZyhcImNoZWNrTmFtZVwiKTtcbiAgICAgIGxldCBtc2cgPSBcIumKgOihjOaItuWQjeW/hemgkOiIh+eUs+iri+S6uuebuOWQjFwiO1xuICAgICAgbGV0IGlzX3NhbWUgPSAwO1xuICAgICAgbGV0IHNhbWU7XG4gICAgICB0cnkge1xuICAgICAgICBjb25zdCB1c2VyID0gYXdhaXQgcHJpc21hLmFwcGx5LmZpbmRNYW55KHtcbiAgICAgICAgICB3aGVyZToge1xuICAgICAgICAgICAgQU5EOiBbXG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiB7XG4gICAgICAgICAgICAgICAgICBlcXVhbHM6IHEubmFtZSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgaWQ6IHtcbiAgICAgICAgICAgICAgICAgIGVxdWFsczogcS5pZCxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgXSxcbiAgICAgICAgICB9LFxuICAgICAgICAgIHNlbGVjdDoge1xuICAgICAgICAgICAgbmFtZTogdHJ1ZSxcbiAgICAgICAgICB9LFxuICAgICAgICB9KTtcblxuICAgICAgICBzYW1lID0gT2JqZWN0LmtleXModXNlcikubGVuZ3RoO1xuICAgICAgICAvLyDmiLblkI3lkoznlLPoq4vkurrnm7jlkIxcbiAgICAgICAgaWYgKHNhbWUpIHtcbiAgICAgICAgICBtc2cgPSBcIueUs+iri+iAheiIh+mKgOihjOaItuWQjeebuOWQjFwiO1xuICAgICAgICAgIGlzX3NhbWUgPSAxO1xuICAgICAgICAgIC8vIGNvbnNvbGUubG9nKFwidXBkYXRlXCIgKyB1cGRhdGUpO1xuICAgICAgICAgIG1zZyA9IFwi55Sz6KuL5Lq66IiH6YqA6KGM5oi25ZCM55u45ZCMXCI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXNfc2FtZSA9IDA7XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCB1cGRhdGUgPSBhd2FpdCBwcmlzbWEuYXBwbHkudXBkYXRlKHtcbiAgICAgICAgICB3aGVyZToge1xuICAgICAgICAgICAgaWQ6IHEuaWQsXG4gICAgICAgICAgfSxcbiAgICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICBpc19zYW1lX25hbWU6IGlzX3NhbWUsXG4gICAgICAgICAgfSxcbiAgICAgICAgfSk7XG5cbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5zZW5kKHtcbiAgICAgICAgICBpc19zYW1lLFxuICAgICAgICAgIG1zZyxcbiAgICAgICAgfSk7XG4gICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgICAgaWYgKGVyci5jb2RlID09PSBcIlAyMDAyXCIpIHtcbiAgICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLmpzb24oe1xuICAgICAgICAgICAgdGl0bGU6IFwi55Sz6KuL5aSx5pWXXCIsXG4gICAgICAgICAgICBtc2c6IFwi5q2k6Lqr5Lu96K2J5bey57aT6KKr55Sz6KuL77yM6KuL56K66KqN6Ly45YWl5piv5ZCm5pyJ6KqkXCIsXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5zZW5kKFwi5bu65qqU5aSx5pWXXCIpO1xuICAgICAgfVxuICAgIH1cbiAgfSBlbHNlIHtcbiAgICByZXMuc3RhdHVzKDIwMCkuanNvbih7IG5hbWU6IFwiSm9obiBEb2UgR0VUXCIgfSk7XG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJQcmlzbWFDbGllbnQiLCJwcmlzbWEiLCJoYW5kbGVyIiwicmVxIiwicmVzIiwicSIsImJvZHkiLCJhcGkiLCJzdGF0dXMiLCJtZXRob2QiLCJ1c2VyIiwiYXBwbHkiLCJmaW5kVW5pcXVlIiwid2hlcmUiLCJpZCIsInNlbGVjdCIsInNlbmQiLCJ0aXRsZSIsImVyciIsImNvbnNvbGUiLCJsb2ciLCJjb2RlIiwianNvbiIsIm1zZyIsImlzX3NhbWUiLCJzYW1lIiwiZmluZE1hbnkiLCJBTkQiLCJuYW1lIiwiZXF1YWxzIiwiT2JqZWN0Iiwia2V5cyIsImxlbmd0aCIsInVwZGF0ZSIsImRhdGEiLCJpc19zYW1lX25hbWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./pages/api/user.js\n");

/***/ }),

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@prisma/client");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("./pages/api/user.js"));
module.exports = __webpack_exports__;

})();